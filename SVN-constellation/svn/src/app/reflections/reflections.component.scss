@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,700;0,900;1,500&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto';
}

$mainColor: #6BDBEB;
$mattWhite: #D3D3D3;
$mainBg: #1E1E1E;
$mainBoxBg: #2B2D30;
$modulBG: #242526;

.reflections-box {
  width: 500px;
  height: 170px;
  margin-top: 10px;
  display: flex;
  justify-content: space-between;
}

.reflection-modul {
  width: 60%;
  background-color: $modulBG;
  position: relative;
}

.reflection-title {
  font-size: 16px;
  padding: 15px 0px 0px 15px;
  font-weight: 100;
}

.toggle {
  width: 40px;
  height: 20px;
  position: absolute;
  top: 10px;
  right: 10px;
  border: 1px solid $mattWhite;
  border-radius: 20px;
  background-color: transparent;
}

.toggle button {
  width: 14px;
  height: 14px;
  background-color: $mainColor;
  border: none;
  border-radius: 20px;
  position: absolute;
  top: 2px;
  right: 3px;
}

.reflection-buttons {
  display: flex;
  justify-content: space-between;
  align-items: left;
  text-align: center;
  padding-left: 20px;
  padding-right: 20px;
}

.modul-title {
  font-size: 10px;
  font-weight: 100;
  color: $mattWhite;
}

.modul-value {
  font-size: 12px;
  color: $mainColor;
  padding: 10px;
}

.room-btn {
  border: 1px solid $mainColor;
  border-radius: 5px;
  padding: 5px 15px 5px 15px;
  background-color: transparent;
}

.reflection-modul {
  width: 60%;
  background-color: $modulBG;
  position: relative;
}

.clarity-modul, .width-modul {
  width: 100%;
  height: 100%;
  background-color: $modulBG;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 10px;
}

.knob-group {
  display: flex;
  background-color: transparent;
  padding: 5px;
}


.knob {
  --knob-deg: 0;
  position: relative;
  padding-top: 0px;
  padding-left: 5px;
  width: 10px;
  border: 0;
  text-align: center;
  touch-action: none;
  font-size: 1rem;
}

.knob input {
  -webkit-appearance: textfield;
          appearance: textfield;
  -moz-appearance: textfield;
  position: relative;
  left: 0;
  top: 0px;
  display: flex;
  width: 5.3333333333em;
  height: 1.5em;
  font: inherit;
  font-size: 0.75em;
  color: $mainColor;
  line-height: 1;
  text-align: center;
  font-variant-numeric: tabular-nums lining-nums;
  background-color: transparent;
  border: 0;
  margin: 5.8333333333em 0 0 0;
  padding: 0;
  outline: 0;
  cursor: default;
  z-index: 2;
  caret-color: $mainColor;
}
.knob input:placeholder {
  opacity: 1;
  color: $mainColor;
}
.knob input::-webkit-outer-spin-button, .knob input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.knob input::-moz-selection {
  color: $mainColor;
  background-color: $mainColor;
}
.knob input::selection {
  color: $mainColor;
  background-color: $mainColor;
}
.knob input[disabled], .knob input[readonly] {
  cursor: not-allowed;
}
.knob input[disabled] ~ *, .knob input[disabled] ~ *::before, .knob input[disabled] ~ *::after, .knob input[readonly] ~ *, .knob input[readonly] ~ *::before, .knob input[readonly] ~ *::after {
  pointer-events: none;
}
.knob input[disabled]::-moz-selection, .knob input[readonly]::-moz-selection {
  background-color: transparent;
}
.knob input[disabled]::selection, .knob input[readonly]::selection {
  background-color: transparent;
}
.knob label {
  position: absolute;
  top: 10px;
  display: flex;
  width: 90%;
  height: 90%;
  overflow: hidden;
  padding-top: 33em;
  font-size: 1em;
  color: $mainColor;
  white-space: nowrap;
  text-overflow: ellipsis;
  z-index: 1;
  pointer-events: none;
}

.knob label::before, .knob label::after {
  position: absolute;
  display: inline-block;
}
.knob label::before {
  content: "";
  left: 50%;
  top: 20px;
  width: 50px;
  height: 50px;
  border: 1px solid #5f5e5e;
  border-radius: 110%;
  background-color: transparent;
  background: linear-gradient(to bottom, currentColor 0% 100%) no-repeat 50% 0%;
  background-size: 0.2em 1em;
  transform-origin: center center;
  transform: translateX(-50%) rotate(0deg);
  transform: translateX(-50%) rotate(calc(1deg * var(--knob-deg)));
  cursor: default;
  pointer-events: fill;
}
.knob label::after {
  content: attr(data-unit);
  top: 50px;
  right: 0;
  font-size: 12px;
  line-height: 2.5;
  color: $mainColor;
}
.knob svg {
  position: absolute;
  left: 50%;
  top: 0;
  width: 3em;
  height: 3em;
  transform: translateX(-50%);
  stroke-dasharray: 180 180;
  fill: none;
  stroke: $mainColor;
  z-index: 3;
}
.knob svg path {
  stroke-width: 5;
  stroke-dashoffset: 0;
  visibility: visible;
  pointer-events: stroke;
  transition: all 0.2s cubic-bezier(0, 0, 0.2, 1);
}
.knob svg path:first-of-type {
  stroke: $mainColor;
}
.knob svg path:last-of-type {
  stroke: $mainColor;
  stroke-dashoffset: -97;
}


